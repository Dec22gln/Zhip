// MARK: - Generic
"Generic.OK" = "OK";
"Generic.Close" = "Close";
"Generic.Next" = "Next";
"Generic.Skip" = "Skip";
"Generic.Back" = "Back";
"Generic.Zils" = "ZILs";

"Error.Input.Address.ContainsNonHexadecimal" = "Only 0-9 and A-F allowed";
"Error.Input.Address.TooShort" = "Address is too short, should be %d";
"Error.Input.Address.TooLong" = "Address is too long, should be %d";

"Error.Input.Amount.NonNumericString" = "String not a number";
"Error.Input.Amount.TooSmall" = "Must be at lest %@";
"Error.Input.Amount.TooLarge" = "Must be at most %@";
"Error.Input.Amount.ExceedingBalance" = "Insufficient funds";

"Error.Input.Passphrase.TooShort" = "Passphrase have length >%d";
"Error.Input.Passphrase.ConfirmingPassphraseMismatch" = "Passphrases does not match";
"Error.Input.Passphrase.IncorrectPassphrase" = "Incorrect passphrase";
"Error.Input.Passphrase.IncorrectPassphraseDuringBackupOfNewlyCreatedWallet" = "Incorrect passphrase, if you can't remember it do NOT continue, restart the wallet creation from the beginning.";

"Error.Input.Pincode.PincodesDoesNotMatch" = "PIN does not match";
"Error.Input.Pincode.IncorrectPincode" = "Incorrect PIN";

// MARK: - Common for Views
"View.PullToRefreshControl.Title" = "Pull to refresh";

// MARK: - Onboarding

// MARK: Welcome
"Scene.Welcome.Label.Header" = "Welcome";
"Scene.Welcome.Label.Body" = "Welcome to Zhip - the worlds first and only iOS wallet for Zilliqa.";
"Scene.Welcome.Button.Start" = "Start";

// MARK: TermsOfService
"Scene.TermsOfService.Label.TermsOfService" = "Terms of service";
"Scene.TermsOfService.Button.Accept" = "Accept";

// MARK: AskForAnalyticsPermissions
"Scene.AskForAnalyticsPermissions.Title" = "Analytics";
"Scene.AskForAnalyticsPermissions.Text.Disclaimer" = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
"Scene.AskForAnalyticsPermissions.Checkbox.ReadDisclaimer" = "I have read and understood the analytics disclaimer";
"Scene.AskForAnalyticsPermissions.Button.Accept" = "Accept";
"Scene.AskForAnalyticsPermissions.Button.Decline" = "Decline";

// MARK: WarningERC20
"Scene.WarningERC20.Label.Erc20Tokens" = "ERC-20 tokens";
"Scene.WarningERC20.Text.WarningERC20" = "This is a Zilliqa testnet. Please do not send any interim ERC-20 ZIL tokens to this wallet.\n\nZilliqa and the Ethereum blockchain are two completely separate platforms and the mneumonic phrases, private keys, addresses and tokens CANNOT be shared.\n\nTransferring assets directly from Ethereum to Zilliqa (or vice versa) will cause irreparable loss.";
"Scene.WarningERC20.Checkbox.UnderstandsERC20Incompatibility" = "I understand that ERC-20 tokens are not supported";
"Scene.WarningERC20.Button.Accept" = "Accept";
"Scene.WarningERC20.Button.DoNotShowAgain" = "Do not show this again";

// MARK: ChooseWallet
"Scene.ChooseWallet.Label.Impression" = "Wallet";
"Scene.ChooseWallet.Label.SetUpWallet" = "It is time to set up the wallet. Do you want to start fresh, or restore an existing wallet?";
"Scene.ChooseWallet.Button.NewWallet" = "New Wallet";
"Scene.ChooseWallet.Button.RestoreWallet" = "Restore existing wallet";

// MARK: EnsureThatYouAreNotBeingWatched
"Scene.EnsureThatYouAreNotBeingWatched.Label.Security" = "Security";
"Scene.EnsureThatYouAreNotBeingWatched.Label.MakeSureAlone" = "Make sure that you are in a private space where no one can see/record your personal data. Avoid public places, cameras and CCTVâ€™s.";
"Scene.EnsureThatYouAreNotBeingWatched.Button.Understand" = "I understand";

// MARK: CreateNewWallet
"Scene.CreateNewWallet.Title" = "New wallet";
"Scene.CreateNewWallet.Labels.ChooseNewPassphrase.Title" = "Set an encryption passphrase";
"Scene.CreateNewWallet.Labels.ChooseNewPassphrase.Value" = "Your encryption passphrase is used to encrypt your private key. Make sure to back up your encryption passphrase before proceeding.";
"Scene.CreateNewWallet.Field.EncryptionPassphrase" = "Encryption passphrase (min %d chars)";
"Scene.CreateNewWallet.Field.ConfirmEncryptionPassphrase" = "Confirm encryption passphrase";
"Scene.CreateNewWallet.Checkbox.PassphraseIsBackedUp" = "I have securely backed up my encryption passphrase";
"Scene.CreateNewWallet.Button.Continue" = "Continue";

// MARK: BackupWallet
"Scene.BackupWallet.Label.BackUpKeys" = "Back up keys";
"Scene.BackupWallet.Label.UrgeBackup" = "Backing up the private key is the most important, but is also the most sensitive data. The private key is not tied to the encryption passphrase, but the keystore is. Failing to backup your wallet may result in irreversible loss of assets.";
"Scene.BackupWallet.Label.Keystore" = "Keystore";
"Scene.BackupWallet.Button.Copy" = "Copy";
"Scene.BackupWallet.Label.PrivateKey" = "Private Key";
"Scene.BackupWallet.Buttons.Reveal" = "Reveal";
"Scene.BackupWallet.Checkbox.HaveSecurelyBackedUp" = "I have securely backed up my private key.";
"Scene.BackupWallet.Button.Done" = "Done";
"Scene.BackupWallet.Event.Toast.DidCopyKeystore" = "Copied keystore";

// MARK: Backup KeyPair
"Scene.DecryptKeystoreToRevealKeyPair.Title" = "Private key";
"Scene.DecryptKeystoreToRevealKeyPair.Label.DecryptToReaveal" = "Enter your encryption passphrase to reveal your private and public key.";
"Scene.DecryptKeystoreToRevealKeyPair.Field.EncryptionPassphrase" = "Encryption passphrase";
"Scene.DecryptKeystoreToRevealKeyPair.Button.Reveal" = "Reveal";

"Scene.BackUpRevealedKeyPair.Title" = "Backup key pair";
"Scene.BackUpRevealedKeyPair.Label.PrivateKey" = "Private key";
"Scene.BackUpRevealedKeyPair.Label.UncompressedPublicKey" = "Uncompressed public key";
"Scene.BackUpRevealedKeyPair.Buttons.Copy" = "Copy";
"Scene.BackUpRevealedKeyPair.Event.Toast.DidCopyPrivateKey" = "Copied private key";
"Scene.BackUpRevealedKeyPair.Event.Toast.DidCopyPublicKey" = "Copied public key";

// MARK: BackUp Keystore
"Scene.BackUpKeystore.Title" = "Keystore";
"Scene.BackUpKeystore.Button.Copy" = "Copy keystore";
"Scene.BackUpKeystore.Event.Toast.DidCopyKeystore" = "Copied keystore";

// MARK: RestoreWallet
"Scene.RestoreWallet.Title" = "Restore Wallet";
"Scene.RestoreWallet.Segment.PrivateKey" = "Private key";
"Scene.RestoreWallet.Segment.Keystore" = "Keystore";
"Scene.RestoreWallet.Field.PrivateKey" = "Private key";
"Scene.RestoreWallet.Field.EncryptionPassphrase" = "Encryption passphrase (min %d chars)";
"Scene.RestoreWallet.Field.ConfirmEncryptionPassphrase" = "Confirm encryption passphrase";
"Scene.RestoreWallet.Button.RestoreWallet" = "Restore Wallet";

// MARK: ChoosePincode
"Scene.ChoosePincode.Title" = "Set PIN";
"Scene.ChoosePincode.Button.Done" = "Done";
"Scene.ChoosePincode.Text.PincodeOnlyLocksApp" = "The app PIN is an additional safety measure used only to unlock the app. It is not used to encrypt your private key. Make sure that you have backed up you wallet, since you might get locked out of the app if you forget the PIN.";


// MARK: ConfirmNewPincode
"Scene.ConfirmNewPincode.Title" = "Confirm PIN";
"Scene.ConfirmNewPincode.Error.PincodesDoesNotMatch" = "PIN does not match";
"Scene.ConfirmNewPincode.Checkbox.PincodeIsBackedUp" = "I have securely backed up my PIN code";
"Scene.ConfirmNewPincode.Button.Done" = "Done";


// MARK: - Main Flow

// MARK: Main
"Scene.Main.Label.Balance.Title" = "Your balance";
"Scene.Main.Button.Send" = "Send";
"Scene.Main.Button.Receive" = "Receive";

// MARK: Unlock App
"Scene.UnlockAppWithPincode.Title" = "Unlock app";

// MARK: Remove Pincode
"Scene.RemovePincode.Title" = "Unlock to remove";

// MARK: PrepareTransaction
"Scene.PrepareTransaction.Title" = "Send";
"Scene.PrepareTransaction.Field.Recipient" = "To address";
"Scene.PrepareTransaction.Field.Amount" = "Amount";
"Scene.PrepareTransaction.Button.MaxAmount" = "Max";
"Scene.PrepareTransaction.Label.GasInSmallUnits" = "Gas price is measured in 10^-12 Zil";
"Scene.PrepareTransaction.Field.GasPrice" = "Gas price (min %@)";
"Scene.PrepareTransaction.Field.EncryptionPassphrase" = "Encryption passphrase";
"Scene.PrepareTransaction.Button.Send" = "Send";
"Scene.PrepareTransaction.Label.TransactionId" = "Transaction Id";
"Scene.PrepareTransaction.Labels.Balance.Title" = "Current balance";

// MARK: ScanQRCode
"Scene.ScanQRCode.Title" = "Scan QR";

// MARK: SignTransaction
"Scene.SignTransaction.Label.SignTransactionWithEncryptionPassphrase" = "Confirm transaction with your passphrase";
"Scene.SignTransaction.Field.EncryptionPassphrase" = "Encryption passphrase";
"Scene.SignTransaction.Button.Confirm" = "Confirm";

// MARK: PollTransactionStatus
"Scene.PollTransactionStatus.Title" = "Wait for consensus";
"Scene.PollTransactionStatus.Label.WaitingOnReceipt" = "Your transaction has successfully been broadcasted to the network. You can either wait a minute or two for the receipt that the network has reached consensus about your transaction or you can close this screen and recheck your balance later.";
"Scene.PollTransactionStatus.Button.Skip" = "Skip waiting";

// MARK: TransactionConfirmation
"Scene.GotTransactionReceipt.Title" = "Confirmed";
"Scene.GotTransactionReceipt.Label.Confirmed" = "The network has successfully confirmed your transaction.";
"Scene.GotTransactionReceipt.Labels.Fee.Title" = "Transaction fee";
"Scene.GotTransactionReceipt.Labels.Fee.Value" = "%@E-12 Zil";
"Scene.GotTransactionReceipt.Button.OpenDetailsInBrowser" = "Open details in browser";


// MARK: Recieve
"Scene.Receive.Title" = "Receive";
"Scene.Receive.Label.MyPublicAddress" = "My public address";
"Scene.Receive.Button.CopyMyAddress" = "Copy";
"Scene.Receive.Button.RequestPayment" = "Request payment";
"Scene.Receive.Event.Toast.DidCopyAddress" = "Copied address";
"Scene.Receive.Field.RequestAmount" = "Request amount";

// MARK: - Settings
"Scene.Settings.Title" = "Settings";

"Scene.Settings.Cell.RemovePincode" = "Remove pincode";
"Scene.Settings.Cell.SetPincode" = "Set pincode";

"Scene.Settings.Cell.StarUsOnGithub" = "Star us on Github";
"Scene.Settings.Cell.ReportIssueOnGithub" = "Report issue on Github";
"Scene.Settings.Cell.Acknowledgements" = "Acknowledgements";
"Scene.Settings.Cell.Terms of service" = "Terms of service";
"Scene.Settings.Cell.ReadERC20Warning" = "Read ERC-20 warning";
"Scene.Settings.Cell.ChangeAnalyticsPermissions" = "Change analytics permissions";
"Scene.Settings.Cell.BackupWallet" = "Backup wallet";
"Scene.Settings.Cell.RemoveWallet" = "Remove wallet";
"Scene.Settings.Cell.AppVersion" = "Version";

// MARK: - Confirm Wallet Removal
"Scene.ConfirmWalletRemoval.Title" = "Remove wallet";
"Scene.ConfirmWalletRemoval.Label.AreYouSure" = "Are you sure you want to remove your wallet?";
"Scene.ConfirmWalletRemoval.Checkbox.BackUpWallet" = "I understand that I will permanently lose any asset in this wallet if I have not backed up the wallet.";
"Scene.ConfirmWalletRemoval.Button.Confirm" = "Confirm";
